<svg width="400" height="300" viewBox="0 0 400 300"
     xmlns="http://www.w3.org/2000/svg">
	<style>
	.pt{
		fill: white;
		stroke: blue;
		stroke-width: 2;
		cursor: move;
	}
	.line{
		fill: none;
		stroke: black;
		stroke-width: 2;
		stroke-dasharray: 2 2;
	}
	.selected {
		stroke: red;
	}
	.background {
		fill: lightyellow;
	}
	</style>
	<rect width="100%" height="100%" class="background"/>

	<script>
	function createElementSvg(tagName) {
		return document.createElementNS("http://www.w3.org/2000/svg", tagName);
	}
	(function () {
		var svg = document.getElementsByTagName('svg')[0];
		var currentLine;
		var currentGroup;
		var currentPathData;
		var currentPathDataAfter;
		
		var currentPoint;
		
		svg.addEventListener('mousedown', event => {
			if (event.target.classList.contains('pt')) {
				if(currentGroup) {
				} else {
					currentPoint = event.target;
					currentPoint.classList.add('selected');
					currentLine = event.target.parentElement.getElementsByTagName('path')[0];
					let after = false;
					currentPathData = "M";
					currentPathDataAfter = "";
					for (pt of event.target.parentElement.getElementsByTagName('circle')) {
						if (pt === currentPoint) {
							after = true;
							continue;
						}
						if (after) {
							currentPathDataAfter += `${pt.getAttribute('cx')} ${pt.getAttribute('cy')} `;
						} else {
							currentPathData += `${pt.getAttribute('cx')} ${pt.getAttribute('cy')} `;
						}
					}
				}
			}
			else {
				if (event.button == 0) {
					let pt = createElementSvg('circle');
					pt.setAttribute('class', 'pt');
					pt.setAttribute('r', '3');
					pt.setAttribute('cx', event.x);
					pt.setAttribute('cy', event.y);
					
					if (currentGroup) {
						currentPathData += `L${event.x} ${event.y}`;
					} else {
						currentGroup = createElementSvg('g');
						currentLine = createElementSvg('path');
						currentLine.setAttribute('class', 'line');
						currentGroup.appendChild(currentLine);
						currentPathData = `M${event.x} ${event.y}`
						svg.appendChild(currentGroup);
					}
					currentGroup.appendChild(pt);
				} else {
					currentLine.setAttribute('d', currentPathData);
					currentLine = undefined;
					currentGroup = undefined;
					currentPathData = undefined;
					event.preventDefault();
				}
			}
		});
		
		svg.addEventListener('mousemove', event => {
			if(currentPoint) {
				currentPoint.setAttribute('cx', event.x);
				currentPoint.setAttribute('cy', event.y);
				currentLine.setAttribute('d', currentPathData + `${event.x} ${event.y} ` + currentPathDataAfter);
			}
			else if(currentLine) {
				currentLine.setAttribute('d', currentPathData + `L${event.x} ${event.y}`);
			}
		});

		svg.addEventListener('mouseup', event => {
			if(currentPoint) {
				currentPoint.setAttribute('cx', event.x);
				currentPoint.setAttribute('cy', event.y);
				currentLine.setAttribute('d', currentPathData + `${event.x} ${event.y} ` + currentPathDataAfter);
				currentPoint.classList.remove('selected');
				currentPoint = undefined;
				currentLine = undefined;
				currentPathData = undefined;
				currentPathDataAfter = undefined;
			}
			else if(currentLine) {
				currentLine.setAttribute('d', currentPathData + `L${event.x} ${event.y}`);
			}
		});

	})();
	</script>
</svg>